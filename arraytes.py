#メモ
"""
このプログラムで使用している変数名やテーブル名について

[変数]
card_id・・・RFID通信で得られたカードのID
member・・・作業員の名前
work_time・・・作業時間
work・・・作業内容
rane・・・作業レーン
d_ymd・・・記録する時の年月日
dd・・・記録する時の日(ホームページで日付指定検索するときに必要)
dt・・・記録する時の時刻

IDcheck・・・登録されていないカードのエラー処理の時に使う変数。
tabname・・・記録を保存するテーブルの名前
results・・・社員管理テーブルの中身を2次元リスト型(配列)で持っている変数。

[テーブル]
sample_member・・・「カードID,名前,作業内容」を保存しているテーブル。（社員管理テーブル）
b_年_月・・・記録を保存するテーブル。毎月新しいテーブルに保存先を変更する。
"""

import psycopg2
import datetime

'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''
    #[1] DB接続情報　変数などの定義
'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''
connection = psycopg2.connect(
    host= "ec2-174-129-255-46.compute-1.amazonaws.com",
    port="5432",
    dbname="dflv6jh505d9tv",
    user="qajdgcrnucpdpx",
    password="d2144f11fa2bc512c9f5f4d65cef0b1f804fabef86759d786bd6ca430eba6fa8"
    )

cursor = connection.cursor()

IDcheck = 0




'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''
    #[2] カード読み取り処理で得られたデータを引数で受け取る
'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''

card_id = '2222' #取得したカードのID
work_time = '20' #分
rane = '5' #レーン


'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''
    #[3] DBの社員管理テーブルを参照して、カードIDを照合する。
'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''

cursor.execute("SELECT * FROM sample_member;")      #テーブル「sample_member」の内容を全て取得するクエリ
results = cursor.fetchall()                         #fetchallで、取得したテーブルの内容を全て変数resultsに代入(resultsは2次元配列になる)

"""
resultsの中身は例えばこんな感じ
#配列(1次)の番号　→          #0                      #1                      #2
            results=[('1111','岡林','収穫'),('2222','岡林','芽かき'),('3333','岡林','その他')]
#配列(2次)の番号　→      #0    #1     #2       #0     #1     #2         #0     #1      #2

例:results[1][0]の中身は「2222」

"""

for i in range(3):                      #配列(1次)を0～3まで全て照合。(2次)は0で固定

    if (results[i][0] == card_id):       #CARDIDと取得している配列の中身が一致した時の処理
        member = results[i][1]          #名前を変数memberに代入
        work   = results[i][2]          #作業内容を変数workに代入
        IDcheck += 1                      #IDcheckの中身を1にすることで、エラーを回避


#IDcheck=0 の時(＝登録されていないカードが読み取られた)のエラー処理
#if (IDcheck = 0):
    """エラー処理 """







'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''
    #[4]テーブルを指定し、記録を保存する　
'''●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●'''

date=datetime.datetime.now()                #テーブル名は「 a_年_月 」なので、日付を取得して保存するテーブルを指定できるようにする。
tabname = 'b_%s_%s'%(date.year,date.month)  #テーブル名を作成し、変数tabnameに代入。
d_ymd = '%s年%s月%s日'%(date.year,date.month,date.day)
dd = '%s'%(date.day)
dt = '%s時%s分%s秒'%(date.hour,date.minute,date.second) 

cursor = connection.cursor()
cursor.execute("INSERT INTO %s\
(card_id,member,work_time,work,rane,d_ymd,dt,dd)\
VALUES('%s','%s','%s','%s','%s','%s','%s','%s','%s');"%(tabname,card_id,member,work_time,work,rane,d_ymd,dt,dd))    #クエリをexecuteで実行
connection.commit() 
cursor.close()      #cursorを閉じる
connection.close()  #connectionを閉じる

